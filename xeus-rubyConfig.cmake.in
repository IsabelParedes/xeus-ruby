/***************************************************************************
* Copyright (c) 2024, Isabel Paredes
*
* Distributed under the terms of the BSD 3-Clause License.
*
* The full license is in the file LICENSE, distributed with this software.
****************************************************************************/

# xeus-ruby cmake module
# This module sets the following variables in your project::
#
#   xeus-ruby_FOUND - true if xeus-ruby was found on the system
#   xeus-ruby_INCLUDE_DIRS - the directory containing xeus-ruby headers
#   xeus-ruby_LIBRARY - the library for dynamic linking
#   xeus-ruby_STATIC_LIBRARY - the library for static linking

@PACKAGE_INIT@

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR};${CMAKE_MODULE_PATH}")

@XEUS_RUBY_CONFIG_CODE@

include(CMakeFindDependencyMacro)
find_dependency(xtl @xtl_REQUIRED_VERSION@)
find_dependency(xeus-zmq @xeus-zmq_REQUIRED_VERSION@)
find_dependency(cppzmq @cppzmq_REQUIRED_VERSION@)


if (NOT TARGET xeus-ruby AND NOT TARGET xeus-ruby-static)
    include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")

    if (TARGET xeus-ruby AND TARGET xeus-ruby-static)
        get_target_property(@PROJECT_NAME@_INCLUDE_DIR xeus-ruby INTERFACE_INCLUDE_DIRECTORIES)
        get_target_property(@PROJECT_NAME@_LIBRARY xeus-ruby LOCATION)
        get_target_property(@PROJECT_NAME@_STATIC_LIBRARY xeus-ruby-static LOCATION)
    elseif (TARGET xeus-ruby)
        get_target_property(@PROJECT_NAME@_INCLUDE_DIR xeus-ruby INTERFACE_INCLUDE_DIRECTORIES)
        get_target_property(@PROJECT_NAME@_LIBRARY xeus-ruby LOCATION)
    elseif (TARGET xeus-ruby-static)
        get_target_property(@PROJECT_NAME@_INCLUDE_DIR xeus-ruby-static INTERFACE_INCLUDE_DIRECTORIES)
        get_target_property(@PROJECT_NAME@_STATIC_LIBRARY xeus-ruby-static LOCATION)
        set(@PROJECT_NAME@_LIBRARY ${@PROJECT_NAME@_STATIC_LIBRARY})
    endif ()
endif ()
