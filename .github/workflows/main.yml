name: CI
on:

  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main

  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  unix:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2

      - name: Make build directory
        run: mkdir build

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment-dev.yml

      - name: Configure cmake
        shell: bash -l {0}
        run: |
          cmake .. \
           -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
           -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
        working-directory: build

      - name: Build
        shell: bash -l {0}
        run: make -j${{ steps.cpu-cores.outputs.count }}
        working-directory: build

      - name: Install
        shell: bash -l {0}
        run: make install
        working-directory: build

      - name: Test
        shell: bash -l {0}
        run: pytest . --reruns 5
        working-directory: test

  win:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: cmd.exe
          environment-file: environment-dev.yml

      - name: Make build directory
        run: mkdir build

      - name: Configure cmake
        shell: cmd /C CALL {0}
        run: |
          cmake .. -G "NMake Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DXEUS_BUILD_TESTS=ON ^
            -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" ^
            -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
            -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%"
        working-directory: build

      - name: Build and install
        shell: cmd /C CALL {0}
        run: |
          set CL=/MP
          nmake install
        working-directory: build

      - name: Test
        shell: cmd /C CALL {0}
        run: pytest . --reruns 5
        working-directory: test

  emscripten_wasm:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.45"]

    steps:
      - uses: actions/checkout@v4

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: xeus-ruby-wasm-build
          create-args: >-
            cmake
            emsdk==${{ matrix.emsdk_ver }}
            empack

      - name: Setup emsdk
        shell: bash -l {0}
        run: emsdk install ${{ matrix.emsdk_ver }}

      - name: Build
        shell: bash -l {0}
        run: |
          emsdk activate ${{ matrix.emsdk_ver }}

          source $CONDA_EMSDK_DIR/emsdk_env.sh
          micromamba create -f environment-wasm-host.yml --platform=emscripten-wasm32

          mkdir build
          pushd build

          export EMPACK_PREFIX=$MAMBA_ROOT_PREFIX/envs/xeus-ruby-wasm-build
          export PREFIX=$MAMBA_ROOT_PREFIX/envs/xeus-ruby-wasm-host
          export CMAKE_PREFIX_PATH=$PREFIX
          export CMAKE_SYSTEM_PREFIX_PATH=$PREFIX

          emcmake cmake \
            -DCMAKE_BUILD_TYPE=Release                        \
            -DCMAKE_PREFIX_PATH=$PREFIX                       \
            -DCMAKE_INSTALL_PREFIX=$PREFIX                    \
            -DXEUS_RUBY_EMSCRIPTEN_WASM_BUILD=ON              \
            -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ON            \
            ..
          make -j${{ steps.cpu-cores.outputs.count }}
